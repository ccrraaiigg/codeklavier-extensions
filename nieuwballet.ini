[midi]
# midi options of the device to use
port: 2

#IAC driver loopback:
#noteon_id: 144

#M-audio midi controller:
#noteon_id: 152
#noteoff_id: 128
#pedal_id: 184
#pedal_midi_sostenuto: 7

#Yamaha Clavinova:
noteon_id: 144
noteoff_id: 128
pedal_id: 176
pedal_midi_sostenuto: 66

#Casio keyboard:
#pedal_midi_sostenuto: 67


[Hello World]
# simple alphanumeric & commands 1-1 mapping used Hello World module
# midinumber  :  alphanumeric or command mapping
22: .tempo
23: .play
25: e
32: enter
33: sc-evaluate
39: v
42: u
44: b
49: =
50: ~
51: +
52: *
53: /
54: -
56: space
57: 0
58: space
59: 2
60: 3
61: w
62: p
63: s
64: n
65: d
66: i
67: m
68: b
70: n
71: t
73: o
86: g
88: n
89: d
90: a
91: k
92: h
93: l
95: backspace
96: o
97: c
98: r
105: .
108: down
toggle: 107

[shortcuts]
# first key that remains presses, second key
eval: cmd, d

[Motippets]
# simple alphanumeric & commands 1-1 mapping used in Motippets module and evaluation shortcut
66: motippetssc-evaluate

[Motippets register division]
# midi note register limits (21 <= mid_low is low register, between mid_low and mid_hi is mid register, > mid_hi is hi)
mid_low: 49
mid_hi: 78

[chordal main motifs midi]
motif_1: 59, 62, 66, 60, 64, 67, 62, 69, 66
motif_2: 70, 51, 62, 60, 44, 63, 66, 62, 55, 49

[melodic main motifs midi]
motif_3: 45, 47, 48, 49

[chordal conditional motifs midi]
conditional_1: 36, 31, 29, 26, 28, 35, 38, 33, 24, 26, 31, 28, 33, 21, 23, 29

[melodic conditional motifs midi]
conditional_2: 49, 45, 48, 49, 43
conditional_3: 97, 93, 96, 97, 91

[chordal conditional results motifs midi]
conditional_result_1: 21,22,23
conditional_result_2: 23,24,25

[melodic conditional results motifs midi]
conditional_result_3: 68,74,74,63,69
conditional_result_4: 99, 92, 90, 89, 92, 94
conditional_result_5: 26,23,23

[melodic mini motifs]
mini_motif_1: 35, 38, 42
mini_motif_2: 26, 32, 35, 38
mini_motif_3: 38, 42, 47
mini_motif_4: 86, 90, 93
mini_motif_5: 86, 92, 95, 98
mini_motif_6: 60, 64, 67
mini_motif_7: 50, 56, 59, 62
mini_motif_8: 72, 74, 62, 66, 64

[chordal mini motifs]
mini_motif_9: 62, 65, 66

[snippets code output]
# motif_name : code output
# (in this case supercollider)
# (duplicate names won't work!)
adagio: Adagio();
pasdedeux: PasdeDeux();
scrollx: window.scrollX();
loadFunction: function Adagio () { 
    		// Italian, or French adage, meaning 'slowly, at ease.'
    		// slow movements performed with fluidity and grace;
			// featuring slow, controlled movements.
			var myDiv = document.querySelector("html");
  			if (myDiv.className == 'Fluid') {
   			 	myDiv.className = 'notFluid';
  			} else {
    			myDiv.className = 'Fluid';
  			}
			}

			function Face () {
			// En face indicates facing something directly, generally the audience.
		 		(document.querySelector("#text01").style.display="initial")
			}

			function Derrière () {
		 		(document.querySelector("#text01").style.display="none")
			}
			
        	function Breathing () { 
    
    		if (document.querySelector("body").style.transform=="scale(0.3)") {
        	(document.querySelector("body").style.transform="scale(4)")
        	}
    		else  { (document.querySelector("body").style.transform="scale(0.5)") 
        	}
			}

			function Fondu () {
			// literally 'melted.'
			var myDiv = document.querySelector("body");
  			if (myDiv.className == 'color') {
   			 	myDiv.className = 'nocolor';
  			} else {
    			myDiv.className = 'color';
  			}
			}

			function Écarté () {
			// literally 'spread,' as in 'separated.'
			auto = setInterval(function() {
			if (document.querySelector("body").style.letterSpacing=="-30px") {
		 		(document.querySelector("body").style.letterSpacing="120px")
			}
			else{ (document.querySelector("body").style.letterSpacing="-30px")
			}
			}, 600); 
			}; 
			function Pause_Allongé () { clearInterval(auto); 
			} 
			// setInterval("Allongé()", 600)
			//clearInterval(26)

			function Pirouette () {
		    var turn = document.getElementById("stage"),
		    deg = 10;
		    timing = setInterval(function() {
		    turn.style.transform = "rotateY(" + deg + "deg)";
		    deg = (deg + 10) % 360
		    }, 60); 
		    } 
			function Pause_Pirouette () { clearInterval(timing); 
			} 

			function Offstage () {
		    //or document.querySelector("html").style.backgroundColor="black";   
			document.body.innerHTML = '';
			document.head.innerHTML = '';
			}


[snippets code output callback]
# motif_name : code output
# (code to be evaluated after the normal code output, for example: for unmapping)
# (duplicate names won't work!)
mini_motif_1: ~map_rhythm = false; Ndef(\piano_fx).set(\rate, ~tremoloL1.linlin(1, 16, 1/2, 18));


[snippets for tremolos]
mini_motif_1: ~tremoloL1 =


[conditionals settings]
#name : type [note_count, range_more_than, range_less_than], [perpetual (true | false): 1 | 0], optional settings [totalnotes, ]
conditional_1: note_count, 0, 100
conditional_2: range_more_than, 1
conditional_3: range_less_than, 1
# make volume,

[motippets display settings]
#motif_name : display column id
motif_1: 1


[motippets random limits]
# name : bottom limit, upper limits.
random: 10, 45
random1: 1, 80
random2: -2, 10
#NOTE: random2 multiplies by a value extracted from the function where it is used

[ckalculator]
shift: off
wrong_note_tolerance: 1

[lambda]
# lambda function : midi number mapped to the function
evaluate_function: 59
identity_midi: 23
select_first_midi: 0
select_second_midi: 0
successor_midi: 83, 95
predecessor_midi: 0
add_midi: 107
subtract_midi: 71
mult_midi: 0
division_midi: 0
greater_than_midi: 47
equality_midi: 35
less_than_midi: 0

[articulation]
# articulation name : threshold in seconds
chord: 0.02
staccato: 0.35
sostenuto: 0.8
